#!/bin/bash


if [[ $# -ne 3 ]] ; then
	echo "Uage: $0 <TINS_GRIDs> Start_Year End_Year"
	echo "example : $0 500m 1950 1955"
	exit;
fi

TINs_GRIDs="$1";
y1="$2";
y2="$3";

#source $1;

################################################################################
# Bash script to generate forcing file from VIC grids - V.18.04.13
################################################################################
# created Apr 13, 2018 by anssary@gmail.com under supervision of tusharsinha.iitd@gmail.com
# the script requires a TINs & Grids mapping file that contains the TIN ID, the Grids ID, and the Grid's _Y_X
# here's a sample of this file:
# 1 243 _28.6875_-99.4375
# 2 447 _29.6875_-99.9375
# 3 268 _28.8125_-99.5625
# 4 225 _28.5625_-98.4375
# 5 197 _28.4375_-98.6875
# Usage :
	# 1) copy the script inside a folder (ex. TEST/genforc.sh)
	# 2) copy the necessary file (TINs_GRIDs) inside the same folder
	# 3) copy the VIC grids inside a sub-folder (ex. TEST/grids/wb_27.8125_-97.4375)
	# 4) cd to the folder (cd TEST)
	# 5) run the script (./newForcing.sh TINs_GRIDs 1950 1955)
# change the following variable names as desired
# grids folder name
grids="grids";
# generated temp text files folder name
txts=${TINs_GRIDs/\.*/}"_"$y1"_"$y2".txts";
# generated forcing file name
forc=${TINs_GRIDs/\.*/}"_"$y1"_"$y2".forc";
################################################################################
# you may -CAREFULLY- change the following parameter
################################################################################
# given that the VIC grids are as follows:
#	wb_Y_X :
# 		col 1,2,3 = yr,m,d
# 		col 4,5,9,10 = TEMP,PREP,WIND,RH
# 	eb_Y_X :
# 		col 1,2,3 = yr,m,d
# 		col 6+7 = NET_SHORT_WAVE+NET_LONG_WAVE = RN
# 		col 15 = VAPOR_PRESSURE
# forcing fields source grid
forc_flds_src="wb,wb,wb,wb,eb,eb";
forc_flds_src=(${forc_flds_src//,/ });
# forcing fields position in the grid file
forc_flds_col="5,4,10,9,6+7,15";
forc_flds_col=(${forc_flds_col//,/ });
# fields required in the forcing file (in respective order)
# forc_flds="Prep,Temp,RH,Wind,Rn,VP,LAI,DH,MF,SS"
# forc_flds="Prep,Temp,RH,Wind,Rn,VP,LAI,RL,MF,SS"
forc_flds="Prep,Temp,RH,Wind,Rn,VP";
forc_flds=(${forc_flds//,/ });
# forcing fields factors, respectively
forc_flds_fct="/1000,*1,/100,*86400,*86400,*1000";
forc_flds_fct=(${forc_flds_fct//,/ });
################################################################################
# LAI and RL series from this reference (https://ldas.gsfc.nasa.gov/nldas/web/web.veg.monthly.table.xls)
# ex. LAI_RL="7,3,10" or LAI_RL="8"
# leave blank to use all layers (1 - 13)
# LAI_RL="6,9,7";
LAI_RL="1";
################################################################################
# LAI Interception Storage Factor
LAIF="0.0002";
# Height of wind velocity observation
WindF="10";
################################################################################
################################################################################
#					PLEASE DON'T EDIT AFTER THIS LINE
################################################################################
################################################################################
# create txts destination folder if not exist
mkdir -p $txts;
# count how many series from the TINs_GRIDs file
series=`awk 'END{print $1}' $TINs_GRIDs`;
# count how many rows, from the 1st
rows=$grids/wb`awk '{print $3;exit}' $TINs_GRIDs`;
# count rows from start year to end year
rows=`awk '$1>="'$y1'"&&$1<="'$y2'"{r++}END{print r}' $rows`;
# multiply by 2, the forcing requires doubling the rows
rows=$((2 * rows));
# loop through forc_flds
for fld in "${!forc_flds[@]}"; do
	# get the src, whcih is the initial of the grid (wb or eb) that include fld
	src="${forc_flds_src[$fld]}";
	# get the column that contains the fld data
	col="${forc_flds_col[$fld]}";
	# in case of Rn sum columns 6,7
	col=${col/+/+\$};
	# short for field
	f="${forc_flds[$fld]}";
	# field factor
	ff="${forc_flds_fct[$fld]}";
	# xtra = add the Height of wind velocity observation
	if [[ "$f" = "Wind" ]];then xtra="	"$WindF;else xtra="";fi
	# create the field txts empty file
	echo -n>$txts/$f.txts;
	# display the detailed message about the current file creation
	echo -n "composing $txts/$f.txts from column ((\$$col)$ff) in $src grids ";
	# loop through series
	for (( ser=0;ser++<$series; ));do
		# # display the name of the current file
		# echo "composing $txts/${grid_flds[$i]}.txts";
		# insert the header of each series in the field txts file, and the xtra (for Wind)
		echo "$f	$ser	$rows""$xtra">>$txts/$f.txts;
		# get the grid for the current series
		grid=`awk 'NR=='"$ser"'{print $3}' $TINs_GRIDs`;
		# find rows in the years y1, y2 range in the grid
		# i starts with 0, write each col value twice in separate new lines
		# multiply or devide by the factor ff, the factor contains the sign (* or /)
		# write the results to the field txts file
		awk '$1>="'$y1'" && $1<="'$y2'"{printf "%.4f\t%.6f\n%.4f\t%.6f\n",i++,($'$col')'$ff',i,($'$col')'$ff' >> "'$txts'/'$f'.txts"}' $grids/$src$grid;
		# remove the 1st underscore, and replace the 2nd with comma in the grid
		xy=${grid/_/};
		xy=${xy/_/,};
		# display the message about the current grid
		echo -en "\r\t\t\t\t\t\t\t\t ==> series ($ser) , grid ($xy)";
		# add extra new line after each series
		echo>>$txts/$f.txts;
	done
	echo
done
################################################################################
# start working on the last parts LAI, RL, and MF
################################################################################
# display the LAI and RL preparation message
echo "Preparing LAI and RL series"
# preparing LAI and RL arrays
# create a comma separated sequence 1 to 13
_13=`seq -s, 1 13`;
# if LAI_RL is empty fill it with 1 to 13 sequence
LAI_RL=${LAI_RL:-$_13};
# convert LAI_RL string to array
LAI_RL=(${LAI_RL//,/ });
################################################################################
# calculate no. of years
yrs=$((y2-y1+1))
# create daily sum series for years y1 to y2 (if($1>="'$y1'" && $1<="'$y2'"))
# count days in the same month (if(m==$2){d++})
# count and print sum of days by adding sums of months (print ds;ds+=d;print ds;y=$1;m=$2;d=1)
daysSum=`awk 'BEGIN{y="'$y1'";m="01";ds=0}{if($1>="'$y1'" && $1<="'$y2'"){if(m==$2){d++}else{print ds;ds+=d;print ds;y=$1;m=$2;d=1}}}END{print ds;ds+=d;print ds}' $grids/$src$grid`;
days=( $daysSum );
days=${#days[@]};
################################################################################
# get certain row from the variable array
function _getVarRow {
	sed '1,/'$1'\tSTART/d;/END/,$d' $0|sed 's/# //g'|awk -F, 'NR=='$2
}
################################################################################
# 1st LAI
# create the LAI txts empty file
echo -n>$txts/LAI.txts;
# loop through lai series
for lai in "${!LAI_RL[@]}"; do
	# insert LAI headers
	echo "LAI	$((lai+1))	$((yrs*12*2))	$LAIF">>$txts/LAI.txts;
	lais="`_getVarRow LAI ${LAI_RL[$lai]}`";
	# insert LAI series lines
	# Create the LAI series from the daysSum series and seriesLAIs
	echo $daysSum|sed 's/ /\n/g'|awk 'split("'$lais'",lais,","){lai=int((NR-1)/2)%12+1;print $1"\t"lais[lai]}'>>$txts/LAI.txts;
	# add extra new line after each series
	echo>>$txts/LAI.txts;
done;
################################################################################
# 2nd RL
# create the LAI txts empty file
echo -n>$txts/RL.txts;
# loop through rl series
for rl in "${!LAI_RL[@]}"; do
	# insert RL headers
	echo "RL	$((rl+1))	$((yrs*12*2))">>$txts/RL.txts;
	rls="`_getVarRow RL ${LAI_RL[$rl]}`";
	# insert RL series lines
	# # Create the RL series from the daysSum series and seriesLAIs
	echo $daysSum|sed 's/ /\n/g'|awk 'split("'$rls'",rls,","){rl=int((NR-1)/2)%12+1;print $1"\t"rls[rl]}'>>$txts/RL.txts;
	# add extra new line after each series
	echo>>$txts/RL.txts;
done;
################################################################################
# 3rd MF
# find the MF series in this script
# extract lines equal to no. of days in the determined time period ($y1 to $y2)
# remove the hash symbol
# replace the keyword days with the variable $days
# insert the result in an MF txts empty file
sed '1,/MF\tSTART/d;/END/,$d' $0|\
head -n $((days+1))|\
sed 's/# //g'|\
sed "s/days/$days/g"\
>$txts/MF.txts;
################################################################################
# 4th SS
################################################################################
# compose the forcing header, and put all files together in the correct order to create the forcing file
# 5 series , 0 for NumG dummy , series , LAI series , 1 melting factor , 0 source / sink
h=`printf $series' %.0s' {1..5}`'0 '$series' '${#LAI_RL[@]}' 1 0';
# create the empty forcing file
echo "Create the forcing file ($forc) and fill the header";
echo $h|sed 's/ /\t/g'>$forc;
allForcFiles="${forc_flds[@]} LAI RL MF";
allForcFiles=${allForcFiles// /.txts $txts\/};
cat $txts/$allForcFiles.txts >> $forc;
################################################################################
while [ ! -s $forc ]
  do
  printf "%10s \r" Finalizing ... ;
done
# sed -i 's/\\t/\t/' $forc;
echo "DONE";
################################################################################
# VARIABLE
################################################################################
# Land Cover codes
# code,type
# LC	START
# 1,Evergreen Needleleaf Forest
# 2,Evergreen Broadleaf Forest
# 3,Deciduous Needleleaf Forest
# 4,Deciduous Broadleaf Forest
# 5,Mixed Cover
# 6,Woodland
# 7,Wooded Grassland
# 8,Closed Shrubland
# 9,Open Shrubland
# 10,Grassland
# 11,Cropland
# 12,Bare Ground
# 13,Urban and Built-Up
# LC	END
################################################################################
# Leaf Area Index
# rows: code 1-13
# cols: month Jan-Dec
# LAI	START
# 8.76,9.16,9.827,10.093,10.36,10.76,10.493,10.227,10.093,9.827,9.16,8.76
# 5.117,5.117,5.117,5.117,5.117,5.117,5.117,5.117,5.117,5.117,5.117,5.117
# 8.76,9.16,9.827,10.093,10.36,10.76,10.493,10.227,10.093,9.827,9.16,8.76
# 0.52,0.52,0.867,2.107,4.507,6.773,7.173,6.507,5.04,2.173,0.867,0.52
# 4.64,4.84,5.347,6.1,7.4335,8.7665,8.833,8.367,7.5665,6,5.0135,4.64
# 5.276088,5.528588,6.006132,6.4425972,7.2448806,8.3639474,8.540044,8.126544,7.2533006,6.3291908,5.6258086,5.300508
# 2.3331824,2.4821116,2.7266101,3.0330155,3.8849492,5.5212224,6.2395131,5.7733017,4.1556703,3.1274641,2.6180116,2.4039116
# 0.580555,0.6290065,0.628558,0.628546,0.919255,1.7685454,2.5506969,2.5535975,1.7286418,0.9703975,0.726358,0.6290065
# 0.3999679,0.4043968,0.3138257,0.2232945,0.2498679,0.3300675,0.4323964,0.7999234,1.1668827,0.7977234,0.5038257,0.4043968
# 0.782,0.893,1.004,1.116,1.782,3.671,4.782,4.227,2.004,1.227,1.004,0.893
# 0.782,0.893,1.004,1.116,1.782,3.671,4.782,4.227,2.004,1.227,1.004,0.893
# 0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001
# 1.2867143,1.3945997,1.5506977,1.7727263,2.5190228,4.1367678,5.0212291,4.5795799,2.8484358,1.8856229,1.5178736,1.3656797
# LAI	END
################################################################################
# Roughness Length
# rows: code 1-13
# cols: month Jan-Dec
# RL	START
# 1.112,1.103,1.088,1.082,1.076,1.068,1.073,1.079,1.082,1.088,1.103,1.112
# 2.653,2.653,2.653,2.653,2.653,2.653,2.653,2.653,2.653,2.653,2.653,2.653
# 1.112,1.103,1.088,1.082,1.076,1.068,1.073,1.079,1.082,1.088,1.103,1.112
# 0.52,0.52,0.666,0.91,1.031,1.044,1.042,1.037,1.036,0.917,0.666,0.52
# 0.816,0.8115,0.877,0.996,1.0535,1.056,1.0575,1.058,1.059,1.0025,0.8845,0.816
# 0.7602524,0.7551426,0.7772204,0.8250124,0.846955,0.8449668,0.8471342,0.8496604,0.8514252,0.8299022,0.7857734,0.7602744
# 0.35090494,0.34920916,0.36891486,0.40567288,0.42336056,0.42338372,0.42328378,0.42485112,0.42631836,0.40881268,0.37218526,0.35096866
# 0.05641527,0.05645892,0.05557872,0.05430207,0.05425842,0.05399002,0.05361482,0.0572041,0.05892068,0.05821407,0.05709462,0.05645892
# 0.03699235,0.03699634,0.03528634,0.03272533,0.03272134,0.03270066,0.03268178,0.03907616,0.04149324,0.04032533,0.03823134,0.03699634
# 0.0777,0.0778,0.0778,0.0779,0.0778,0.0771,0.0759,0.0766,0.0778,0.0779,0.0778,0.0778
# 0.0777,0.0778,0.0778,0.0779,0.0778,0.0771,0.0759,0.0766,0.0778,0.0779,0.0778,0.0778
# 0.0112,0.0112,0.0112,0.0112,0.0112,0.0112,0.0112,0.0112,0.0112,0.0112,0.0112,0.0112
# 0.1947138,0.19413424,0.20831414,0.23348558,0.24574614,0.24605016,0.24538258,0.24630454,0.247455,0.23527388,0.20963734,0.19478494
# RL	END
################################################################################
# Melting Factor, 30 years time series
# MF	START
# MF	1	days
# 0.00	0.00120112
# 31.00	0.00130802
# 31.00	0.00131593
# 59.00	0.00163330
# 59.00	0.00164757
# 90.00	0.00213120
# 90.00	0.00214838
# 120.00	0.00263278
# 120.00	0.00264823
# 151.00	0.00303117
# 151.00	0.00304062
# 181.00	0.00319733
# 181.00	0.00319844
# 212.00	0.00309584
# 212.00	0.00308806
# 243.00	0.00274524
# 243.00	0.00273073
# 273.00	0.00226021
# 273.00	0.00224302
# 304.00	0.00175948
# 304.00	0.00174409
# 334.00	0.00137365
# 334.00	0.00136408
# 365.00	0.00120208
# 365.00	0.00120112
# 396.00	0.00130802
# 396.00	0.00131593
# 424.00	0.00163330
# 425.00	0.00164757
# 456.00	0.00213120
# 456.00	0.00214838
# 486.00	0.00263278
# 486.00	0.00264823
# 517.00	0.00303117
# 517.00	0.00304062
# 547.00	0.00319733
# 547.00	0.00319844
# 578.00	0.00309584
# 578.00	0.00308806
# 609.00	0.00274524
# 609.00	0.00273073
# 639.00	0.00226021
# 639.00	0.00224302
# 670.00	0.00175948
# 670.00	0.00174409
# 700.00	0.00137365
# 700.00	0.00136408
# 731.00	0.00120208
# 731.00	0.00120112
# 762.00	0.00130802
# 762.00	0.00131593
# 790.00	0.00163330
# 790.00	0.00164757
# 821.00	0.00213120
# 821.00	0.00214838
# 851.00	0.00263278
# 851.00	0.00264823
# 882.00	0.00303117
# 882.00	0.00304062
# 912.00	0.00319733
# 912.00	0.00319844
# 943.00	0.00309584
# 943.00	0.00308806
# 974.00	0.00274524
# 974.00	0.00273073
# 1004.00	0.00226021
# 1004.00	0.00224302
# 1035.00	0.00175948
# 1035.00	0.00174409
# 1065.00	0.00137365
# 1065.00	0.00136408
# 1096.00	0.00120208
# 1096.00	0.00120112
# 1127.00	0.00130802
# 1127.00	0.00131593
# 1155.00	0.00163330
# 1155.00	0.00164757
# 1186.00	0.00213120
# 1186.00	0.00214838
# 1216.00	0.00263278
# 1216.00	0.00264823
# 1247.00	0.00303117
# 1247.00	0.00304062
# 1277.00	0.00319733
# 1277.00	0.00319844
# 1308.00	0.00309584
# 1308.00	0.00308806
# 1339.00	0.00274524
# 1339.00	0.00273073
# 1369.00	0.00226021
# 1369.00	0.00224302
# 1400.00	0.00175948
# 1400.00	0.00174409
# 1430.00	0.00137365
# 1430.00	0.00136408
# 1461.00	0.00120208
# 1461.00	0.00120112
# 1492.00	0.00130802
# 1492.00	0.00131593
# 1520.00	0.00163330
# 1520.00	0.00164757
# 1551.00	0.00213120
# 1551.00	0.00214838
# 1581.00	0.00263278
# 1581.00	0.00264823
# 1612.00	0.00303117
# 1612.00	0.00304062
# 1642.00	0.00319733
# 1642.00	0.00319844
# 1673.00	0.00309584
# 1673.00	0.00308806
# 1704.00	0.00274524
# 1704.00	0.00273073
# 1734.00	0.00226021
# 1734.00	0.00224302
# 1765.00	0.00175948
# 1765.00	0.00174409
# 1795.00	0.00137365
# 1795.00	0.00136408
# 1826.00	0.00120208
# 1826.00	0.00120112
# 1857.00	0.00130802
# 1857.00	0.00131593
# 1885.00	0.00163330
# 1886.00	0.00164757
# 1917.00	0.00213120
# 1917.00	0.00214838
# 1947.00	0.00263278
# 1947.00	0.00264823
# 1978.00	0.00303117
# 1978.00	0.00304062
# 2008.00	0.00319733
# 2008.00	0.00319844
# 2039.00	0.00309584
# 2039.00	0.00308806
# 2070.00	0.00274524
# 2070.00	0.00273073
# 2100.00	0.00226021
# 2100.00	0.00224302
# 2131.00	0.00175948
# 2131.00	0.00174409
# 2161.00	0.00137365
# 2161.00	0.00136408
# 2192.00	0.00120208
# 2192.00	0.00120112
# 2223.00	0.00130802
# 2223.00	0.00131593
# 2251.00	0.00163330
# 2251.00	0.00164757
# 2282.00	0.00213120
# 2282.00	0.00214838
# 2312.00	0.00263278
# 2312.00	0.00264823
# 2343.00	0.00303117
# 2343.00	0.00304062
# 2373.00	0.00319733
# 2373.00	0.00319844
# 2404.00	0.00309584
# 2404.00	0.00308806
# 2435.00	0.00274524
# 2435.00	0.00273073
# 2465.00	0.00226021
# 2465.00	0.00224302
# 2496.00	0.00175948
# 2496.00	0.00174409
# 2526.00	0.00137365
# 2526.00	0.00136408
# 2557.00	0.00120208
# 2557.00	0.00120112
# 2588.00	0.00130802
# 2588.00	0.00131593
# 2616.00	0.00163330
# 2616.00	0.00164757
# 2647.00	0.00213120
# 2647.00	0.00214838
# 2677.00	0.00263278
# 2677.00	0.00264823
# 2708.00	0.00303117
# 2708.00	0.00304062
# 2738.00	0.00319733
# 2738.00	0.00319844
# 2769.00	0.00309584
# 2769.00	0.00308806
# 2800.00	0.00274524
# 2800.00	0.00273073
# 2830.00	0.00226021
# 2830.00	0.00224302
# 2861.00	0.00175948
# 2861.00	0.00174409
# 2891.00	0.00137365
# 2891.00	0.00136408
# 2922.00	0.00120208
# 2922.00	0.00120112
# 2953.00	0.00130802
# 2953.00	0.00131593
# 2981.00	0.00163330
# 2981.00	0.00164757
# 3012.00	0.00213120
# 3012.00	0.00214838
# 3042.00	0.00263278
# 3042.00	0.00264823
# 3073.00	0.00303117
# 3073.00	0.00304062
# 3103.00	0.00319733
# 3103.00	0.00319844
# 3134.00	0.00309584
# 3134.00	0.00308806
# 3165.00	0.00274524
# 3165.00	0.00273073
# 3195.00	0.00226021
# 3195.00	0.00224302
# 3226.00	0.00175948
# 3226.00	0.00174409
# 3256.00	0.00137365
# 3256.00	0.00136408
# 3287.00	0.00120208
# 3287.00	0.00120112
# 3318.00	0.00130802
# 3318.00	0.00131593
# 3346.00	0.00163330
# 3347.00	0.00164757
# 3378.00	0.00213120
# 3378.00	0.00214838
# 3408.00	0.00263278
# 3408.00	0.00264823
# 3439.00	0.00303117
# 3439.00	0.00304062
# 3469.00	0.00319733
# 3469.00	0.00319844
# 3500.00	0.00309584
# 3500.00	0.00308806
# 3531.00	0.00274524
# 3531.00	0.00273073
# 3561.00	0.00226021
# 3561.00	0.00224302
# 3592.00	0.00175948
# 3592.00	0.00174409
# 3622.00	0.00137365
# 3622.00	0.00136408
# 3653.00	0.00120208
# 3653.00	0.00120112
# 3684.00	0.00130802
# 3684.00	0.00131593
# 3712.00	0.00163330
# 3712.00	0.00164757
# 3743.00	0.00213120
# 3743.00	0.00214838
# 3773.00	0.00263278
# 3773.00	0.00264823
# 3804.00	0.00303117
# 3804.00	0.00304062
# 3834.00	0.00319733
# 3834.00	0.00319844
# 3865.00	0.00309584
# 3865.00	0.00308806
# 3896.00	0.00274524
# 3896.00	0.00273073
# 3926.00	0.00226021
# 3926.00	0.00224302
# 3957.00	0.00175948
# 3957.00	0.00174409
# 3987.00	0.00137365
# 3987.00	0.00136408
# 4018.00	0.00120208
# 4018.00	0.00120112
# 4049.00	0.00130802
# 4049.00	0.00131593
# 4077.00	0.00163330
# 4077.00	0.00164757
# 4108.00	0.00213120
# 4108.00	0.00214838
# 4138.00	0.00263278
# 4138.00	0.00264823
# 4169.00	0.00303117
# 4169.00	0.00304062
# 4199.00	0.00319733
# 4199.00	0.00319844
# 4230.00	0.00309584
# 4230.00	0.00308806
# 4261.00	0.00274524
# 4261.00	0.00273073
# 4291.00	0.00226021
# 4291.00	0.00224302
# 4322.00	0.00175948
# 4322.00	0.00174409
# 4352.00	0.00137365
# 4352.00	0.00136408
# 4383.00	0.00120208
# 4383.00	0.00120112
# 4414.00	0.00130802
# 4414.00	0.00131593
# 4442.00	0.00163330
# 4442.00	0.00164757
# 4473.00	0.00213120
# 4473.00	0.00214838
# 4503.00	0.00263278
# 4503.00	0.00264823
# 4534.00	0.00303117
# 4534.00	0.00304062
# 4564.00	0.00319733
# 4564.00	0.00319844
# 4595.00	0.00309584
# 4595.00	0.00308806
# 4626.00	0.00274524
# 4626.00	0.00273073
# 4656.00	0.00226021
# 4656.00	0.00224302
# 4687.00	0.00175948
# 4687.00	0.00174409
# 4717.00	0.00137365
# 4717.00	0.00136408
# 4748.00	0.00120208
# 4748.00	0.00120112
# 4779.00	0.00130802
# 4779.00	0.00131593
# 4807.00	0.00163330
# 4808.00	0.00164757
# 4839.00	0.00213120
# 4839.00	0.00214838
# 4869.00	0.00263278
# 4869.00	0.00264823
# 4900.00	0.00303117
# 4900.00	0.00304062
# 4930.00	0.00319733
# 4930.00	0.00319844
# 4961.00	0.00309584
# 4961.00	0.00308806
# 4992.00	0.00274524
# 4992.00	0.00273073
# 5022.00	0.00226021
# 5022.00	0.00224302
# 5053.00	0.00175948
# 5053.00	0.00174409
# 5083.00	0.00137365
# 5083.00	0.00136408
# 5114.00	0.00120208
# 5114.00	0.00120112
# 5145.00	0.00130802
# 5145.00	0.00131593
# 5173.00	0.00163330
# 5173.00	0.00164757
# 5204.00	0.00213120
# 5204.00	0.00214838
# 5234.00	0.00263278
# 5234.00	0.00264823
# 5265.00	0.00303117
# 5265.00	0.00304062
# 5295.00	0.00319733
# 5295.00	0.00319844
# 5326.00	0.00309584
# 5326.00	0.00308806
# 5357.00	0.00274524
# 5357.00	0.00273073
# 5387.00	0.00226021
# 5387.00	0.00224302
# 5418.00	0.00175948
# 5418.00	0.00174409
# 5448.00	0.00137365
# 5448.00	0.00136408
# 5479.00	0.00120208
# 5479.00	0.00120112
# 5510.00	0.00130802
# 5510.00	0.00131593
# 5538.00	0.00163330
# 5538.00	0.00164757
# 5569.00	0.00213120
# 5569.00	0.00214838
# 5599.00	0.00263278
# 5599.00	0.00264823
# 5630.00	0.00303117
# 5630.00	0.00304062
# 5660.00	0.00319733
# 5660.00	0.00319844
# 5691.00	0.00309584
# 5691.00	0.00308806
# 5722.00	0.00274524
# 5722.00	0.00273073
# 5752.00	0.00226021
# 5752.00	0.00224302
# 5783.00	0.00175948
# 5783.00	0.00174409
# 5813.00	0.00137365
# 5813.00	0.00136408
# 5844.00	0.00120208
# 5844.00	0.00120112
# 5875.00	0.00130802
# 5875.00	0.00131593
# 5903.00	0.00163330
# 5903.00	0.00164757
# 5934.00	0.00213120
# 5934.00	0.00214838
# 5964.00	0.00263278
# 5964.00	0.00264823
# 5995.00	0.00303117
# 5995.00	0.00304062
# 6025.00	0.00319733
# 6025.00	0.00319844
# 6056.00	0.00309584
# 6056.00	0.00308806
# 6087.00	0.00274524
# 6087.00	0.00273073
# 6117.00	0.00226021
# 6117.00	0.00224302
# 6148.00	0.00175948
# 6148.00	0.00174409
# 6178.00	0.00137365
# 6178.00	0.00136408
# 6209.00	0.00120208
# 6209.00	0.00120112
# 6240.00	0.00130802
# 6240.00	0.00131593
# 6268.00	0.00163330
# 6269.00	0.00164757
# 6300.00	0.00213120
# 6300.00	0.00214838
# 6330.00	0.00263278
# 6330.00	0.00264823
# 6361.00	0.00303117
# 6361.00	0.00304062
# 6391.00	0.00319733
# 6391.00	0.00319844
# 6422.00	0.00309584
# 6422.00	0.00308806
# 6453.00	0.00274524
# 6453.00	0.00273073
# 6483.00	0.00226021
# 6483.00	0.00224302
# 6514.00	0.00175948
# 6514.00	0.00174409
# 6544.00	0.00137365
# 6544.00	0.00136408
# 6575.00	0.00120208
# 6575.00	0.00120112
# 6606.00	0.00130802
# 6606.00	0.00131593
# 6634.00	0.00163330
# 6634.00	0.00164757
# 6665.00	0.00213120
# 6665.00	0.00214838
# 6695.00	0.00263278
# 6695.00	0.00264823
# 6726.00	0.00303117
# 6726.00	0.00304062
# 6756.00	0.00319733
# 6756.00	0.00319844
# 6787.00	0.00309584
# 6787.00	0.00308806
# 6818.00	0.00274524
# 6818.00	0.00273073
# 6848.00	0.00226021
# 6848.00	0.00224302
# 6879.00	0.00175948
# 6879.00	0.00174409
# 6909.00	0.00137365
# 6909.00	0.00136408
# 6940.00	0.00120208
# 6940.00	0.00120112
# 6971.00	0.00130802
# 6971.00	0.00131593
# 6999.00	0.00163330
# 6999.00	0.00164757
# 7030.00	0.00213120
# 7030.00	0.00214838
# 7060.00	0.00263278
# 7060.00	0.00264823
# 7091.00	0.00303117
# 7091.00	0.00304062
# 7121.00	0.00319733
# 7121.00	0.00319844
# 7152.00	0.00309584
# 7152.00	0.00308806
# 7183.00	0.00274524
# 7183.00	0.00273073
# 7213.00	0.00226021
# 7213.00	0.00224302
# 7244.00	0.00175948
# 7244.00	0.00174409
# 7274.00	0.00137365
# 7274.00	0.00136408
# 7305.00	0.00120208
# 7305.00	0.00120112
# 7336.00	0.00130802
# 7336.00	0.00131593
# 7364.00	0.00163330
# 7364.00	0.00164757
# 7395.00	0.00213120
# 7395.00	0.00214838
# 7425.00	0.00263278
# 7425.00	0.00264823
# 7456.00	0.00303117
# 7456.00	0.00304062
# 7486.00	0.00319733
# 7486.00	0.00319844
# 7517.00	0.00309584
# 7517.00	0.00308806
# 7548.00	0.00274524
# 7548.00	0.00273073
# 7578.00	0.00226021
# 7578.00	0.00224302
# 7609.00	0.00175948
# 7609.00	0.00174409
# 7639.00	0.00137365
# 7639.00	0.00136408
# 7670.00	0.00120208
# 7670.00	0.00120112
# 7701.00	0.00130802
# 7701.00	0.00131593
# 7729.00	0.00163330
# 7730.00	0.00164757
# 7761.00	0.00213120
# 7761.00	0.00214838
# 7791.00	0.00263278
# 7791.00	0.00264823
# 7822.00	0.00303117
# 7822.00	0.00304062
# 7852.00	0.00319733
# 7852.00	0.00319844
# 7883.00	0.00309584
# 7883.00	0.00308806
# 7914.00	0.00274524
# 7914.00	0.00273073
# 7944.00	0.00226021
# 7944.00	0.00224302
# 7975.00	0.00175948
# 7975.00	0.00174409
# 8005.00	0.00137365
# 8005.00	0.00136408
# 8036.00	0.00120208
# 8036.00	0.00120112
# 8067.00	0.00130802
# 8067.00	0.00131593
# 8095.00	0.00163330
# 8095.00	0.00164757
# 8126.00	0.00213120
# 8126.00	0.00214838
# 8156.00	0.00263278
# 8156.00	0.00264823
# 8187.00	0.00303117
# 8187.00	0.00304062
# 8217.00	0.00319733
# 8217.00	0.00319844
# 8248.00	0.00309584
# 8248.00	0.00308806
# 8279.00	0.00274524
# 8279.00	0.00273073
# 8309.00	0.00226021
# 8309.00	0.00224302
# 8340.00	0.00175948
# 8340.00	0.00174409
# 8370.00	0.00137365
# 8370.00	0.00136408
# 8401.00	0.00120208
# 8401.00	0.00120112
# 8432.00	0.00130802
# 8432.00	0.00131593
# 8460.00	0.00163330
# 8460.00	0.00164757
# 8491.00	0.00213120
# 8491.00	0.00214838
# 8521.00	0.00263278
# 8521.00	0.00264823
# 8552.00	0.00303117
# 8552.00	0.00304062
# 8582.00	0.00319733
# 8582.00	0.00319844
# 8613.00	0.00309584
# 8613.00	0.00308806
# 8644.00	0.00274524
# 8644.00	0.00273073
# 8674.00	0.00226021
# 8674.00	0.00224302
# 8705.00	0.00175948
# 8705.00	0.00174409
# 8735.00	0.00137365
# 8735.00	0.00136408
# 8766.00	0.00120208
# 8766.00	0.00120112
# 8797.00	0.00130802
# 8797.00	0.00131593
# 8825.00	0.00163330
# 8825.00	0.00164757
# 8856.00	0.00213120
# 8856.00	0.00214838
# 8886.00	0.00263278
# 8886.00	0.00264823
# 8917.00	0.00303117
# 8917.00	0.00304062
# 8947.00	0.00319733
# 8947.00	0.00319844
# 8978.00	0.00309584
# 8978.00	0.00308806
# 9009.00	0.00274524
# 9009.00	0.00273073
# 9039.00	0.00226021
# 9039.00	0.00224302
# 9070.00	0.00175948
# 9070.00	0.00174409
# 9100.00	0.00137365
# 9100.00	0.00136408
# 9131.00	0.00120208
# 9131.00	0.00120112
# 9162.00	0.00130802
# 9162.00	0.00131593
# 9190.00	0.00163330
# 9191.00	0.00164757
# 9222.00	0.00213120
# 9222.00	0.00214838
# 9252.00	0.00263278
# 9252.00	0.00264823
# 9283.00	0.00303117
# 9283.00	0.00304062
# 9313.00	0.00319733
# 9313.00	0.00319844
# 9344.00	0.00309584
# 9344.00	0.00308806
# 9375.00	0.00274524
# 9375.00	0.00273073
# 9405.00	0.00226021
# 9405.00	0.00224302
# 9436.00	0.00175948
# 9436.00	0.00174409
# 9466.00	0.00137365
# 9466.00	0.00136408
# 9497.00	0.00120208
# 9497.00	0.00120112
# 9528.00	0.00130802
# 9528.00	0.00131593
# 9556.00	0.00163330
# 9556.00	0.00164757
# 9587.00	0.00213120
# 9587.00	0.00214838
# 9617.00	0.00263278
# 9617.00	0.00264823
# 9648.00	0.00303117
# 9648.00	0.00304062
# 9678.00	0.00319733
# 9678.00	0.00319844
# 9709.00	0.00309584
# 9709.00	0.00308806
# 9740.00	0.00274524
# 9740.00	0.00273073
# 9770.00	0.00226021
# 9770.00	0.00224302
# 9801.00	0.00175948
# 9801.00	0.00174409
# 9831.00	0.00137365
# 9831.00	0.00136408
# 9862.00	0.00120208
# 9862.00	0.00120112
# 9893.00	0.00130802
# 9893.00	0.00131593
# 9921.00	0.00163330
# 9921.00	0.00164757
# 9952.00	0.00213120
# 9952.00	0.00214838
# 9982.00	0.00263278
# 9982.00	0.00264823
# 10013.00	0.00303117
# 10013.00	0.00304062
# 10043.00	0.00319733
# 10043.00	0.00319844
# 10074.00	0.00309584
# 10074.00	0.00308806
# 10105.00	0.00274524
# 10105.00	0.00273073
# 10135.00	0.00226021
# 10135.00	0.00224302
# 10166.00	0.00175948
# 10166.00	0.00174409
# 10196.00	0.00137365
# 10196.00	0.00136408
# 10227.00	0.00120208
# 10227.00	0.00120112
# 10258.00	0.00130802
# 10258.00	0.00131593
# 10286.00	0.00163330
# 10286.00	0.00164757
# 10317.00	0.00213120
# 10317.00	0.00214838
# 10347.00	0.00263278
# 10347.00	0.00264823
# 10378.00	0.00303117
# 10378.00	0.00304062
# 10408.00	0.00319733
# 10408.00	0.00319844
# 10439.00	0.00309584
# 10439.00	0.00308806
# 10470.00	0.00274524
# 10470.00	0.00273073
# 10500.00	0.00226021
# 10500.00	0.00224302
# 10531.00	0.00175948
# 10531.00	0.00174409
# 10561.00	0.00137365
# 10561.00	0.00136408
# 10592.00	0.00120208
# 10592.00	0.00120112
# 10623.00	0.00130802
# 10623.00	0.00131593
# 10651.00	0.00163330
# 10652.00	0.00164757
# 10683.00	0.00213120
# 10683.00	0.00214838
# 10713.00	0.00263278
# 10713.00	0.00264823
# 10744.00	0.00303117
# 10744.00	0.00304062
# 10774.00	0.00319733
# 10774.00	0.00319844
# 10805.00	0.00309584
# 10805.00	0.00308806
# 10836.00	0.00274524
# 10836.00	0.00273073
# 10866.00	0.00226021
# 10866.00	0.00224302
# 10897.00	0.00175948
# 10897.00	0.00174409
# 10927.00	0.00137365
# 10927.00	0.00136408
# 10958.00	0.00120208
# MF	END
################################################################################
